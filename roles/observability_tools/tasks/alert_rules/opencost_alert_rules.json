[
  {
    "id": 1,
    "uid": "ae7bq8t32cav4e",
    "orgID": 1,
    "folderUID": "AstronomyNotifications",
    "ruleGroup": "AstronomyAlerts",
    "title": "Astronomy Shop CPU Cost has exceeded budget for 5m",
    "condition": "C",
    "data": [
      {
        "refId": "A",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "prometheus",
        "model": {
          "editorMode": "code",
          "expr": "sum by (exported_namespace) (exported_container_exported_namespace_node:container_cpu_allocation_cost_per_node:avg5m{exported_container!=\"loadgenerator\", exported_namespace=\"otel-demo\"})",
          "instant": true,
          "intervalMs": 1000,
          "legendFormat": "__auto",
          "maxDataPoints": 43200,
          "range": false,
          "refId": "A"
        }
      },
      {
        "refId": "B",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [],
                "type": "gt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "B"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "A",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "reducer": "last",
          "refId": "B",
          "type": "reduce"
        }
      },
      {
        "refId": "C",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [
                  0.03
                ],
                "type": "gt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "C"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "B",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "refId": "C",
          "type": "threshold"
        }
      }
    ],
    "noDataState": "NoData",
    "execErrState": "Error",
    "for": "1m",
    "annotations": {
      "description": "{{ $labels.exported_namespace }} has exceeded the allocated budget for vCPU for 5m (current value: ${{ $value }})",
      "summary": "Overspend for vCPU detected in {{ $labels.exported_namespace }}"
    },
    "labels": {},
    "isPaused": false,
    "notification_settings": {
      "receiver": "grafana-default-email"
    }
  },
  {
    "id": 2,
    "uid": "be7bqcipvs934a",
    "orgID": 1,
    "folderUID": "AstronomyNotifications",
    "ruleGroup": "AstronomyAlerts",
    "title": "Astronomy Shop Memory Cost has exceeded budget for 5m",
    "condition": "C",
    "data": [
      {
        "refId": "A",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "prometheus",
        "model": {
          "editorMode": "code",
          "expr": "sum by (exported_namespace) (exported_container_exported_namespace_node:container_memory_allocation_gigabytes_cost_per_node:avg5m{exported_container!=\"loadgenerator\", exported_namespace=\"otel-demo\"})",
          "instant": true,
          "intervalMs": 1000,
          "legendFormat": "__auto",
          "maxDataPoints": 43200,
          "range": false,
          "refId": "A"
        }
      },
      {
        "refId": "B",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [],
                "type": "gt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "B"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "A",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "reducer": "last",
          "refId": "B",
          "type": "reduce"
        }
      },
      {
        "refId": "C",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [
                  0.009
                ],
                "type": "gt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "C"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "B",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "refId": "C",
          "type": "threshold"
        }
      }
    ],
    "noDataState": "NoData",
    "execErrState": "Error",
    "for": "1m",
    "annotations": {
      "description": "{{ $labels.exported_namespace }} has exceeded the allocated budget for RAM for 5m (current value: ${{ $value }})",
      "summary": "Overspend for RAM detected in {{ $labels.exported_namespace }}"
    },
    "labels": {},
    "isPaused": false,
    "notification_settings": {
      "receiver": "grafana-default-email"
    }
  },
  {
    "id": 3,
    "uid": "fe7bqskuwqwowb",
    "orgID": 1,
    "folderUID": "AstronomyNotifications",
    "ruleGroup": "AstronomyAlerts",
    "title": "Astronomy Shop CPU Requests Utilization is low for 5m",
    "condition": "C",
    "data": [
      {
        "refId": "A",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "prometheus",
        "model": {
          "editorMode": "code",
          "expr": "avg by (container, namespace) (container_namespace_node:container_cpu_usage_seconds_per_requests:ratio_irate5m{container!=\"loadgenerator\", namespace=\"otel-demo\"}) * 100",
          "instant": true,
          "intervalMs": 1000,
          "legendFormat": "__auto",
          "maxDataPoints": 43200,
          "range": false,
          "refId": "A"
        }
      },
      {
        "refId": "B",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [],
                "type": "gt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "B"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "A",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "reducer": "last",
          "refId": "B",
          "type": "reduce"
        }
      },
      {
        "refId": "C",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [
                  85
                ],
                "type": "lt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "C"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "B",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "refId": "C",
          "type": "threshold"
        }
      }
    ],
    "noDataState": "NoData",
    "execErrState": "Error",
    "for": "1m",
    "annotations": {
      "description": "{{ $labels.container }} in {{ $labels.namespace }} has a cpu efficiency below 85% for 5m (current value: {{ $value }}%)",
      "summary": "Low vCPU efficiency detected in {{ $labels.container }}"
    },
    "labels": {},
    "isPaused": false,
    "notification_settings": {
      "receiver": "grafana-default-email"
    }
  },
  {
    "id": 4,
    "uid": "fe7bqwedzhlvkb",
    "orgID": 1,
    "folderUID": "AstronomyNotifications",
    "ruleGroup": "AstronomyAlerts",
    "title": "Astronomy Shop Memory Requests Utilization is low for 5m",
    "condition": "C",
    "data": [
      {
        "refId": "A",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "prometheus",
        "model": {
          "editorMode": "code",
          "expr": "avg by (container, namespace) (container_namespace_node:container_memory_working_set_bytes_per_requests_bytes:ratio_avg5m{container!=\"loadgenerator\", namespace=\"otel-demo\"}) * 100",
          "instant": true,
          "intervalMs": 1000,
          "legendFormat": "__auto",
          "maxDataPoints": 43200,
          "range": false,
          "refId": "A"
        }
      },
      {
        "refId": "B",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [],
                "type": "gt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "B"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "A",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "reducer": "last",
          "refId": "B",
          "type": "reduce"
        }
      },
      {
        "refId": "C",
        "relativeTimeRange": {
          "from": 120,
          "to": 0
        },
        "datasourceUid": "__expr__",
        "model": {
          "conditions": [
            {
              "evaluator": {
                "params": [
                  70
                ],
                "type": "lt"
              },
              "operator": {
                "type": "and"
              },
              "query": {
                "params": [
                  "C"
                ]
              },
              "reducer": {
                "params": [],
                "type": "last"
              },
              "type": "query"
            }
          ],
          "datasource": {
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "B",
          "intervalMs": 1000,
          "maxDataPoints": 43200,
          "refId": "C",
          "type": "threshold"
        }
      }
    ],
    "noDataState": "NoData",
    "execErrState": "Error",
    "for": "1m",
    "annotations": {
      "description": "{{ $labels.container }} in {{ $labels.namespace }} has a memory efficiency below 70% for 5m (current value: {{ $value }}%)",
      "summary": "Low memory efficiency detected in {{ $labels.container }}"
    },
    "labels": {},
    "isPaused": false,
    "notification_settings": {
      "receiver": "grafana-default-email"
    }
  }
]