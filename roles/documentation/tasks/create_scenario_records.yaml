---
- name: Create scenario list
  set_fact:
    scenario_list: "{{ scenario_list | default([]) + [curr_scenario] }}"
  loop: "{{ all_incidents }}"
  loop_control:
    loop_var: incident
  vars:
    curr_scenario:
      scenario:
        instance_id: "{{ incident.id }}"
        name: "{{ incident.name }}"
        type: "SRE"
        description: "{{ incident.description }}"
        # Until multiple cateogries per scenario can be supported
        # scenario_class: "{{ incident.fault | map(attribute='category') | unique | sort | join(', ') }}"
        category: "{{ (incident.fault | map(attribute='category') | unique | list | last) | default('Other') }}"
        complexity: "{{ incident.complexity }}"
        # Until multiple cateogries per scenario can be supported
        # scenario_class: "{{ incident.fault | map(attribute='category') | unique | sort | join(', ') }}"
        scenario_class: "{{ (incident.fault | map(attribute='category') | unique | list | last) | default('Other') }}"
      bundle:
        name: "{{ incident.name }}"
        path: "{{ scenario_root_path | default('IT-Automation-Testbed') }}/"
        agent_operation_timeout: "{{ incident.agent_operation_timeout_sec }}"
        bundle_ready_timeout: "{{ incident.bundle_ready_timeout_sec }}"
        params:
          INCIDENT_NUMBER: "{{ incident.id }}"
          location: "{{ scenario_root_path | default('IT-Automation-Testbed') }}/roles/incident_{{ incident.id }}"
        scenario_type: "SRE"
        make_target_mapping:
          deploy:
            target: "e2e_awx_init_stage_one"
          inject_fault:
            unused: "{{ incident.inject_fault_unused }}"
          evaluate:
            target: "evaluation"
          delete:
            target: "e2e_awx_stage_three"
          status:
            target: "bundle_status"
          get:
            target: "bundle_info"
          on_error:
            target: "e2e_awx_stage_three"
  tags:
    - documentation

- name: Get category list
  set_fact:
    scenario_categories: "{{ scenario_list | map(attribute='scenario.category') | unique | sort | list }}"
  tags:
    - documentation

- name: Write scenarios to JSON file
  copy:
    dest: "scenarios.json"
    content: "{{ scenario_list | to_nice_json }}"
  tags:
    - documentation

- name: Show categories
  debug:
    var: scenario_categories
  tags:
    - documentation
