---
- name: Get AWX service information
  kubernetes.core.k8s_info:
    kubeconfig: "{{ awx_kubeconfig }}"
    kind: Service
    namespace: awx
    name: awx-deployment-service
  register: awx_service_information
  tags:
    - awx_configuration

- name: Set `controller_host` value for the Ansible tower
  set_fact:
    controller_host: "http://{{ awx_service_information.resources[0].status.loadBalancer.ingress[0].hostname }}"
  tags:
    - awx_configuration

- name: Set `controller_username` value for the Ansible tower
  set_fact:
    controller_username: "admin"
  tags:
    - awx_configuration

- name: Get AWX secret information
  kubernetes.core.k8s_info:
    kubeconfig: "{{ awx_kubeconfig }}"
    kind: Secret
    namespace: awx
    name: awx-deployment-admin-password
  register: awx_secret_information
  tags:
    - awx_configuration

- name: Set `controller_password` value for the Ansible tower
  set_fact:
    controller_password: "{{ awx_secret_information.resources[0].data.password | b64decode }}" # pragma: allowlist secret
  tags:
    - awx_configuration

- name: Create `Kubeconfig` credential type
  awx.awx.credential_type:
    # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret
    name: Kubeconfig
    description: Credentials type for Kubeconfig
    kind: cloud
    inputs: "{{ lookup('file', 'static_json_payloads/credential_type_kubeconfig_inputs.json') }}"
    injectors: "{{ lookup('file', 'static_json_payloads/credential_type_kubeconfig_injectors.json') }}"
    state: "{{ state }}"
    validate_certs: false
  tags:
    - awx_configuration

- name: Add/Remove SSH deploy keys for (upcoming) project setup - GitHub Repository - IT-Automation-Bench
  awx.awx.credential:
    # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret
    name: Credential-GitHub-IT-Automation-Bench
    description: Credential-GitHub-IT-Automation-Bench
    organization: Default
    credential_type: Source Control
    inputs:
      ssh_key_data: "{{ lookup('file', git['deploy_key_it_automation_bench_private_ssh_key_path']) }}"
      ssh_key_unlock: "{{ git['deploy_key_it_automation_bench_private_ssh_key_passphrase'] }}"
    state: "{{ state }}"
  tags:
    - awx_configuration

- name: Add/Remove Project - GitHub Repository - IT-Automation-Bench
  awx.awx.project:
    # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret
    name: Project-GitHub-IT-Automation-Bench
    description: Project-GitHub-IT-Automation-Bench
    organization: Default
    scm_type: git
    scm_url: "git@github.ibm.com:DistributedCloudResearch/IT-Automation-Testbed.git"
    scm_branch: "o3_eval"
    scm_clean: true
    scm_track_submodules: false
    scm_delete_on_update: true
    scm_allow_override: true
    state: "{{ state }}"
    credential: Credential-GitHub-IT-Automation-Bench
  tags:
    - awx_configuration

- name: Add/Remove SSH deploy keys for (upcoming) project setup - GitHub Repository - Lumyn / SRE-Agent
  awx.awx.credential:
    # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret
    name: Credential-GitHub-Lumyn
    description: Credential-GitHub-Lumyn
    organization: Default
    credential_type: Source Control
    inputs:
      ssh_key_data: "{{ lookup('file', git['deploy_key_agent_private_ssh_key_path']) }}"
      ssh_key_unlock: "{{ git['deploy_key_agent_private_ssh_key_passphrase'] }}"
    state: "{{ state }}"
  tags:
    - awx_configuration

- name: Add/Remove Project - GitHub Repository - Lumyn
  awx.awx.project:
    # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret
    name: Project-GitHub-Lumyn
    description: Project-GitHub-Lumyn
    organization: Default
    scm_type: git
    scm_url: "git@github.ibm.com:DistributedCloudResearch/lumyn.git"
    scm_branch: "for_awx"
    scm_clean: true
    scm_track_submodules: false
    scm_delete_on_update: true
    scm_allow_override: true
    state: "{{ state }}"
    credential: Credential-GitHub-Lumyn
  tags:
    - awx_configuration

- name: Add/Remove Execution Envrionment
  awx.awx.execution_environment:
   # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret

    name: AWX-EE-Custom
    description: AWX-EE-Custom
    organization: Default
    image: "quay.io/arorar/awx-ee"
    pull: always
  tags:
    - awx_configuration

- name: Add/Remove AWX credentials
  awx.awx.credential:
    # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret
    name: Credential-AWX
    description: Credential-AWX
    organization: Default
    credential_type: Red Hat Ansible Automation Platform
    inputs:
      host: "{{ controller_host }}"
      username: "{{ controller_username }}"
      password: "{{ controller_password }}" # pragma: allowlist secret
      # ToDo: Set based on an upstream configuration variable
      verify_ssl: false
    state: "{{ state }}"
  tags:
    - awx_configuration

- name: Add/Remove AWS credentials
  awx.awx.credential:
    # (Hack): As the value set using set_fact controller_host is not picked up
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}" # pragma: allowlist secret
    name: Credential-AWS
    description: Credential-AWS
    organization: Default
    credential_type: Amazon Web Services
    inputs:
      username: "{{ aws['access_key_id'] }}"
      password: "{{ aws['secret_access_key'] }}" # pragma: allowlist secret
    state: "{{ state }}"
  tags:
    - awx_configuration
